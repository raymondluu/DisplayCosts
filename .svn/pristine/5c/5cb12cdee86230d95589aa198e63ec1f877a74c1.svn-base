TCSS 342 - Data Structures
Winter 2013
Assignment 5 Part 2

Modify this file to add answers to the questions below. Commit your modified version of this file to your svn repository for this project.


Most questions below refer to the Graph.pdf file included with the starter code for this assignment. Graph.pdf shows the same graph used in part 1 of this assignment. That graph is referred to as G in this document.

For questions 1 to 6 below answer TRUE or FALSE.

Q1.  Graph G is a digraph.
FALSE

Q2.  Graph G is acyclic.
FALSE

Q3.  Graph G is a weighted graph.
TRUE

Q4.  Graph G is a complete graph.
FALSE

Q5.  In graph G, vertex 1 (Aberdeen) is reachable from vertex 4 (Kennewick).
TRUE

Q6.  Graph G is a connected graph.
TRUE


For questions 7 to 11 below provide short answers.

Q7.  What is the cardinality of the vertex set (|V|) in graph G?
The cardinality of the vertex set in graph G is 10.

Q8.  List the vertices that are adjacent to vertex 9 (Tacoma) in graph G.
The vertices that are adjacent to vertex 9 (Tacoma) in graph G are vertex 5 (Olympia),
7 (Seattle), 10 (Yakima).

Q9.  What is the in-degree of vertex 8 (Spokane) in graph G?
The in-degree of vertex 8 (Spokane) is 3. Undirected graphs don't have indegrees and outdegrees
but if it weren't the case it would be 3.

Q10. What is the cost of the simple path {7, 6, 1} in graph G?
The cost of this path is 174.

Questions 12 - 17 refer to DFS and BFS

Q11. Show the order in which vertices would be visited by a depth first search (DFS) starting at node 7 (Seattle). You may show either the node numbers or the city names.
7, 2, 6, 1, 5, 9, 10, 4, 8, 3

Q12. Which previously studied data structure is used in the implementation of DFS? 
A Stack.

Q13. Show the order in which vertices would be visited by a breadth first search (BFS) starting at node 7 (Seattle). You may show either the node numbers or the city names.
7, 2, 6, 8, 9, 1, 3 , 10, 5, 4

Q14. Which previously studied data structure is used in the implementation of BFS?
A Queue.

Q15. Which search algorithm (DFS or BFS) is commonly used to construct a spanning tree?
DFS is commonly used.

Q16. Which search algorithm (DFS or BFS) is commonly used to find the shortest simple path between two vertices?
BFS is commonly used.

Question 17 to 19 below refer to the starter code provide with this assignment.

Q17. (Deleted)

Q18. In your own words, briefly describe the purpose of the minimalPath() method in class WeightedAdjMatrixGraph.
The purpose of this method is to find a minimal cost path between two given vertices.
It adds the edge weights of each edge that is passed when attempting to go to the destination.
Then returns the value.

Q19. In your own words, briefly describe the purpose of the floydShortestPaths() method in class WeightedAdjMatrixGraph.
The matrix of the original graph in the assignment gives sortest paths from each vertice to
another. It is 0 for vertices that are not connected. Then for vertices connected, it displays
the edge weights. While floydShortestPaths gives you a similar matrix but for each section
that is 0, it connects the path that it can take to reach it and adds the edge weights. While
the other sections that are already set in the original matrix stay the same.

For questions 20 through 25, match the name of the algorithm to the problem in graph theory it is designed to solve (from the A to F list below). You may need to do a bit of research on the Internet to answer these questions. NOTE: below the list of questions is a list of various problems.

Q20. Dijkstra's algorithm.
B

Q21. Prim's algorithm.
A

Q22. Kruskal's algorithm
A

Q23. The Floyd-Warshall algorithm
E

Q24. The Bellman-Ford algorithm
C

Q25. The Ford-Fulkerson algorithm
D


Problems in graph theory:
A) Minimum spanning tree
B) Single-source shortest paths (graph without negative edge weights)
C) Single-source shortest paths (graph may include negative edge weights)
D) Maximum flow in a flow network
E) All pairs shortest paths
F) Topological sort